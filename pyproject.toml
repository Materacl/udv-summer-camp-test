[project]
name = "udv-summer-camp-test"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiofiles>=24.1.0",
    "fastapi>=0.115.12",
    "pydantic-settings>=2.8.1",
    "uvicorn>=0.34.0",
]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pyright>=1.1.398",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.11.2",
]

[tool.ruff]
# Assume Python 3.13
target-version = "py313"

# Exclude a variety of commonly ignored directories.
exclude = [
    "alembic",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
preview = true
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E",
    "F",
    "I",
    "C",
    "B",
    "W",
    "ERA",
    "FAST", # FastAPI lint
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "A",
    "COM",
    "DTZ",
    "T10",
    "EM",
    "FIX",
    "FA",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SIM",
    "TID",
    "TD",
    "ARG",
    "PTH",
    "FLY",
    "C90",
    "N",
    "PERF",
    "DOC",
    "PGH",
    "PL",
    "UP",
    "RUF",
    "TRY"
]
ignore = [
    "C408",
    "S101",
    "COM812",
    "N802",
    "TRY300",
    "S105",
    "PT003"
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.ruff.format]
preview = true
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra"
]
testpaths = [
    "tests",
    "integration",
]
pythonpath = [
    ".", "tests"
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.pyright]
venvPath = "."
venv = ".venv"
ignore = ["alembic/versions/**"]
